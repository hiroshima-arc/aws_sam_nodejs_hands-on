AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    sam-app

    Sample SAM Template for sam-app
    
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 3
        Runtime: nodejs8.10
        Environment:
          Variables:
            TABLE_NAME: !Ref Table

    Api:
      # enable CORS; to make more specific, change the origin wildcard
      # to a particular domain name, e.g. "'www.example.com'"
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

Resources:

    HelloWorldFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: hello_world/
            Handler: app.lambda_handler
            Runtime: nodejs8.10
            Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
                Variables:
                    PARAM1: VALUE
            Events:
                HelloWorld:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /hello
                        Method: get

    CreateFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: todo/
        Handler: app.create
        FunctionName: TodoCreateFunction
        Policies: AmazonDynamoDBFullAccess
        Events:
          PostResource:
            Type: Api
            Properties:
              Path: /todo/new
              Method: post

    GetAllFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: todo/
        Handler: app.getAll
        FunctionName: TodoGetAllFunction
        Policies: AmazonDynamoDBReadOnlyAccess
        Events:
          GetResource:
            Type: Api
            Properties:
              Path: /todo/all
              Method: get

  # API functions related to active TODO items

    GetActiveFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: todo/
        Handler: app.getActive
        FunctionName: TodoGetActiveFunction
        Policies: AmazonDynamoDBReadOnlyAccess
        Events:
          GetResource:
            Type: Api
            Properties:
              Path: /todo/active
              Method: get

    UpdateActiveFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: todo/
        Handler: app.updateActive
        FunctionName: TodoUpdateActiveFunction
        Policies: AmazonDynamoDBFullAccess
        Events:
          PutResource:
            Type: Api
            Properties:
              Path: /todo/active
              Method: put

  # API functions related to completed TODO items

    GetCompleteFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: todo/
        Handler: app.getComplete
        FunctionName: TodoGetCompleteFunction
        Policies: AmazonDynamoDBReadOnlyAccess
        Events:
          GetResource:
            Type: Api
            Properties:
              Path: /todo/complete
              Method: get

    MarkCompleteFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: todo/
        Handler: app.markComplete
        FunctionName: TodoMarkCompleteFunction
        Policies: AmazonDynamoDBFullAccess
        Events:
          PutResource:
            Type: Api
            Properties:
              Path: /todo/complete
              Method: put

    DeleteCompleteFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: todo/
        Handler: app.deleteComplete
        FunctionName: TodoDeleteCompleteFunction
        Policies: AmazonDynamoDBFullAccess
        Events:
          DeleteResource:
            Type: Api
            Properties:
              Path: /todo/complete
              Method: delete

    Table:
      Type: AWS::Serverless::SimpleTable
      Properties:
        PrimaryKey:
          Name: todo_id
          Type: String
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

Outputs:

    HelloWorldApi:
      Description: "API Gateway endpoint URL for Prod stage for Hello World function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

    HelloWorldFunction:
      Description: "Hello World Lambda Function ARN"
      Value: !GetAtt HelloWorldFunction.Arn

    HelloWorldFunctionIamRole:
      Description: "Implicit IAM Role created for Hello World function"
      Value: !GetAtt HelloWorldFunctionRole.Arn
